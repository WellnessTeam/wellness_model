name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - main

jobs:
  # Step 1: Run tests on all branches except main
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Run tests
        run: poetry run pytest

  # Step 2: Build Docker image for dev or prod
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build Docker image
        run: |
          docker build -t wellnessmodel:${{ github.sha }} .
          docker tag wellnessmodel:${{ github.sha }} ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}

  # Step 3: Deploy to Dev or Prod EC2 based on branch
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.PROD_EC2_HOST || secrets.DEV_EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}
            docker stop wellness-model || true
            docker rm wellness-model || true
            docker run -d -p 8001:8001 \
              --name wellness-model \
              -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
              -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
              ${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}
